{
    "name": "private-market-circuits",
    "version": "1.0.0",
    "license": "MIT",
    "scripts": {
        "postinstall": "mkdir -p scripts/out scripts/out/eddsa-signature scripts/out/eth-address scripts/out/sig-merkle scripts/out/eth-address/no-ecdh-check scripts/out/eth-address/ecdh-check",
        "eth-address-ecdh:compile": "circom circom/eth-address/ecdh-check/sellETHAddressECDH.circom --r1cs --wasm --output circom/eth-address/ecdh-check/bin/",
        "eth-address-ecdh:setup1": "yarn run snarkjs zkey new circom/eth-address/ecdh-check/bin/sellETHAddressECDH.r1cs powersOfTau28_hez_final_18.ptau circom/eth-address/ecdh-check/zkey/sellETHAddressECDH_0.zkey",
        "eth-address-ecdh:setup2": "yarn run snarkjs zkey contribute circom/eth-address/ecdh-check/zkey/sellETHAddressECDH_0.zkey circom/eth-address/ecdh-check/zkey/sellETHAddressECDH_1.zkey --name='private-market' -v",
        "eth-address-ecdh:exportvkey": "yarn run snarkjs zkey export verificationkey circom/eth-address/ecdh-check/zkey/sellETHAddressECDH_1.zkey circom/eth-address/ecdh-check/vkey/verification_key_sellETHAddressECDH.json",
        "eth-address-ecdh:solidity": "yarn run snarkjs zkey export solidityverifier circom/eth-address/ecdh-check/zkey/sellETHAddressECDH_1.zkey sol/VerifierSellPrivKeyECDSAECDH.sol",
        "eth-address-ecdh:prove": "yarn run ts-node scripts/proveSellETHAddressECDH.ts",
        "eth-address-ecdh:calldata": "yarn snarkjs zkey export soliditycalldata scripts/out/eth-address/ecdh-check/publicSignalsSellETHAddressECDH.json scripts/out/eth-address/ecdh-check/proofSellETHAddressECDH.json",
        "eth-address-no-ecdh:compile": "circom circom/eth-address/no-ecdh-check/sellETHAddressNoECDH.circom --r1cs --wasm --output circom/eth-address/no-ecdh-check/bin/",
        "eth-address-no-ecdh:setup1": "yarn run snarkjs zkey new circom/eth-address/no-ecdh-check/bin/sellETHAddressNoECDH.r1cs powersOfTau28_hez_final_18.ptau circom/eth-address/no-ecdh-check/zkey/sellETHAddressNoECDH_0.zkey",
        "eth-address-no-ecdh:setup2": "yarn run snarkjs zkey contribute circom/eth-address/no-ecdh-check/zkey/sellETHAddressNoECDH_0.zkey circom/eth-address/no-ecdh-check/zkey/sellETHAddressNoECDH_1.zkey --name='private-market' -v",
        "eth-address-no-ecdh:exportvkey": "yarn run snarkjs zkey export verificationkey circom/eth-address/no-ecdh-check/zkey/sellETHAddressNoECDH_1.zkey circom/eth-address/no-ecdh-check/vkey/verification_key_sellETHAddressNoECDH.json",
        "eth-address-no-ecdh:solidity": "yarn run snarkjs zkey export solidityverifier circom/eth-address/no-ecdh-check/zkey/sellETHAddressNoECDH_1.zkey sol/VerifierSellPrivKeyECDSANoECDH.sol",
        "eth-address-no-ecdh:prove": "yarn run ts-node scripts/proveSellETHAddressNoECDH.ts",
        "eth-address-no-ecdh:calldata": "yarn snarkjs zkey export soliditycalldata scripts/out/eth-address/no-ecdh-check/publicSignalsSellETHAddressNoECDH.json scripts/out/eth-address/no-ecdh-check/proofSellETHAddressNoECDH.json",
        "eth-address:test": "yarn run ts-mocha tests/eth-address/sellETHAdress.test.ts",
        "sig-merkle:compile": "circom circom/sig-merkle/sigMerkle.circom --r1cs --wasm --output circom/sig-merkle/bin/",
        "sig-merkle:setup1": "yarn run snarkjs zkey new circom/sig-merkle/bin/sigMerkle.r1cs powersOfTau28_hez_final_21.ptau circom/sig-merkle/zkey/sigMerkle_0.zkey",
        "sig-merkle:setup2": "yarn run snarkjs zkey contribute circom/sig-merkle/zkey/sigMerkle_0.zkey circom/sig-merkle/zkey/sigMerkle_1.zkey --name='private-market' -v",
        "sig-merkle:exportvkey": "yarn run snarkjs zkey export verificationkey circom/sig-merkle/zkey/sigMerkle_1.zkey circom/sig-merkle/vkey/verification_key_sigMerkle.json",
        "sig-merkle:prove": "yarn run ts-node scripts/proveSigMerkle.ts private-market",
        "sig-merkle:test": "yarn run ts-mocha tests/sig-merkle/**/*.test.ts",
        "sig-merkle:verify": "yarn run snarkjs groth16 verify circom/sig-merkle/vkey/verification_key_sigMerkle.json scripts/proof-artifacts/sig-merkle-public-signals.json scripts/proof-artifacts/sig-merkle-decrypted-proof.json",
        "sig-eddsa:compile": "circom circom/eddsa-signature/mainSellSigPublicMessageEdDSA.circom --r1cs --wasm --output circom/eddsa-signature/bin/mainSellSigPublicMessageEdDSA",
        "sig-eddsa:setup1": "yarn run snarkjs zkey new circom/eddsa-signature/bin/mainSellSigPublicMessageEdDSA/mainSellSigPublicMessageEdDSA.r1cs powersOfTau28_hez_final_14.ptau circom/eddsa-signature/zkey/mainSellSigPublicMessageEdDSA_0.zkey",
        "sig-eddsa:setup2": "yarn run snarkjs zkey contribute circom/eddsa-signature/zkey/mainSellSigPublicMessageEdDSA_0.zkey circom/eddsa-signature/zkey/mainSellSigPublicMessageEdDSA_1.zkey --name='private-market' -v",
        "sig-eddsa:exportvkey": "yarn run snarkjs zkey export verificationkey circom/eddsa-signature/zkey/mainSellSigPublicMessageEdDSA_1.zkey circom/eddsa-signature/vkey/verification_key_mainSellSigPublicMessageEdDSA.json",
        "sig-eddsa:prove": "yarn run ts-node scripts/proveSellSigEdDSA.ts",
        "sig-eddsa:solidity": "yarn run snarkjs zkey export solidityverifier circom/eddsa-signature/zkey/mainSellSigPublicMessageEdDSA_1.zkey sol/VerifierSellSigEdDSA.sol",
        "sig-eddsa:calldata": "yarn snarkjs zkey export soliditycalldata scripts/out/sig-eddsa/publicSignalsmainSellSigPublicMessageEdDSA.json scripts/out/sig-eddsa/proofmainSellSigPublicMessageEdDSA.json",
        "sig-eddsa:test": "yarn run ts-mocha tests/eddsa-signature/**/*.test.ts",
        "proof-sig-merkle:exportvkey": "yarn run snarkjs zkey export verificationkey circom/proof-sig-merkle/zkey/verifyAndEncryptSigMerkleProof_1.zkey circom/proof-sig-merkle/vkey/verification_key_verifyAndEncryptSigMerkleProof.json",
        "proof-sig-merkle:solidity": "yarn run snarkjs zkey export solidityverifier circom/proof-sig-merkle/zkey/verifyAndEncryptSigMerkleProof_1.zkey sol/VerifierVerifyAndEncryptSigMerkleProof.sol",
        "proof-sig-merkle:calldata": "yarn run snarkjs zkey export soliditycalldata scripts/out/proof-sig-merkle/public.json scripts/out/proof-sig-merkle/proof.json",
        "proof-sig-merkle:test": "yarn run ts-mocha tests/proof-sig-merkle/**/*.test.ts",
        "lint": "eslint . --ext .ts",
        "setup:sol": "cp -r sol/ ../contracts/src/verifiers"
    },
    "devDependencies": {
        "@types/chai": "4.3.5",
        "@types/chai-as-promised": "7.1.5",
        "@types/jest": "29.5.1",
        "@types/mocha": "10.0.1",
        "@types/node": "18.15.6",
        "@typescript-eslint/eslint-plugin": "5.43.0",
        "@typescript-eslint/parser": "5.59.1",
        "chai": "4.3.7",
        "chai-as-promised": "7.1.1",
        "eslint": "8.39.0",
        "eslint-config-standard-with-typescript": "34.0.1",
        "eslint-plugin-import": "2.25.2",
        "eslint-plugin-n": "15.0.0",
        "eslint-plugin-promise": "6.0.0",
        "mocha": "10.2.0",
        "ts-mocha": "10.0.0"
    },
    "dependencies": {
        "@noble/secp256k1": "1.7.1",
        "big-integer": "^1.6.51",
        "circom-ecdsa": "git+https://github.com/dmpierre/circom-ecdsa.git#private-market/remove-include",
        "circom-pairing": "git+https://github.com/dmpierre/circom-pairing.git#private-market/remove-include",
        "circom_tester": "0.0.19",
        "circomlib": "2.0.5",
        "circomlibjs": "0.1.7",
        "efficient-zk-ecdsa": "git+https://github.com/personaelabs/efficient-zk-ecdsa.git",
        "ffjavascript": "0.2.57",
        "heyanon-circuits": "git+https://github.com/dmpierre/heyanon-circuits.git#private-market/specify-v",
        "keccak256": "1.0.6",
        "maci-circuits": "1.1.2",
        "maci-crypto": "1.1.2",
        "maci-domainobjs": "1.1.2",
        "poseidon-encryption": "1.0.2",
        "private-market-utils": "*",
        "snarkjs": "0.6.9"
    }
}
